{"version":3,"file":"index.js","mappings":"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","sources":["webpack://mesto-project-ff/webpack/bootstrap","webpack://mesto-project-ff/webpack/runtime/define property getters","webpack://mesto-project-ff/webpack/runtime/hasOwnProperty shorthand","webpack://mesto-project-ff/./src/components/constat.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/forms/deleteForm.js","webpack://mesto-project-ff/./src/components/forms/editForm.js","webpack://mesto-project-ff/./src/index.js","webpack://mesto-project-ff/./src/components/forms/newCardsForm.js","webpack://mesto-project-ff/./src/components/forms/avatarForm.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// Находим форму в DOM\r\nexport const formElement = document.querySelector(\".popup__form\");\r\nexport const editFormElement = document.forms[\"edit-profile\"];\r\nexport const newPlaceFormElement = document.forms[\"new-place\"];\r\nexport const avatarFormElement = document.forms[\"edit-avatar\"];\r\nexport const deleteCardForm = document.forms[\"delete-card\"];\r\n//кнопки\r\nexport const buttonEditProfile = editFormElement.querySelector('.popup__button');\r\nexport const buttonNewCard = newPlaceFormElement.querySelector('.popup__button');\r\nexport const buttonEditAvatar = avatarFormElement.querySelector('.popup__button');\r\nexport const buttonDeleteCard = deleteCardForm.querySelector('.popup__button');\r\nexport const buttonTypeCard = document.querySelector('.popup_type_image');\r\nexport const profileEditButton = document.querySelector(\".profile__edit-button\");\r\nexport const profileAddButton = document.querySelector(\".profile__add-button\");\r\n\r\n\r\n// попапы\r\nexport const popupsArray = Array.from(document.querySelectorAll('.popup'));\r\nexport const editForm = document.querySelector('.popup_type_edit');\r\nexport const newCardForm = document.querySelector('.popup_type_new-card');\r\nexport const avatarForm = document.querySelector(\".popup_type_avatar\");\r\nexport const deletePopup = document.querySelector(\".popup_type_delete-card\");\r\n// Контейнер для карточек\r\nexport const placesList = document.querySelector(\".places__list\");\r\n// поля формы\r\nexport const avatarImage = document.querySelector(\".profile__image\");\r\nexport const nameInput = document.querySelector('.popup__input_type_name');\r\nexport const jobInput = document.querySelector('.popup__input_type_description');\r\n// Элементы, куда должны быть вставлены значения полей\r\nexport const userNameElement = document.querySelector('.profile__title');\r\nexport const userJobElement = document.querySelector('.profile__description');\r\n// Получаем значения полей формы\r\nexport const newPlaceNameInput = newPlaceFormElement.elements[\"place-name\"];\r\nexport const newLinkInput = newPlaceFormElement.elements.link;\r\n// Попап с картинкой\r\nexport const popupImageCaption = document.querySelector(\".popup__caption\");\r\nexport const popupImage = document.querySelector(\".popup__image\");\r\n// Кнопка закрытия\r\nexport const closeButton = deletePopup.querySelector(\".popup__close\");\r\n","import {popupsArray} from './constat.js';\r\n//функции для открытия и закрытия всплывающих окон,\r\n//также для обработки клавиши escape и слушатель overlay click\r\nfunction handleEscClick(evt) {\r\n  if (evt.key === \"Escape\") {\r\n    const openedPopup = popupsArray.find(popup => popup.classList.contains('popup_is-opened'));\r\n    if (openedPopup) {\r\n      closePopup(openedPopup);\r\n    }\r\n  }\r\n}\r\n\r\nfunction handleOverlayClick(evt) { \r\n    if (evt.target === evt.currentTarget) {\r\n      closePopup(evt.target);\r\n  }\r\n}\r\n\r\nfunction handleCloseButtonClick(evt) {\r\n  const button = evt.target;\r\n  const popup = button.closest('.popup');\r\n  closePopup(popup);\r\n}\r\n\r\nfunction openPopup(popup) {\r\n    popup.classList.add('popup_is-opened');\r\n    document.addEventListener(\"keydown\", handleEscClick);\r\n}\r\n\r\nfunction closePopup(popup) {\r\nif (popup) {\r\n  popup.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", handleEscClick);\r\n}\r\n}\r\n\r\nexport { \r\n    handleOverlayClick,\r\n    closePopup, \r\n    openPopup,\r\n    handleCloseButtonClick\r\n};","import {\r\n  popupImage,\r\n  popupImageCaption,\r\n  buttonTypeCard,\r\n  userId,\r\n} from \"./constat\";\r\n// Функция добавления темплейта\r\nexport function createCard(cards, callbacksObject, userId) {\r\n  const {\r\n    deleteCardCallback,\r\n    openImageCallback,\r\n    countLikesCallback,\r\n  } = callbacksObject;\r\n  // Создание темплейта\r\n  const cardTemplate = document.querySelector(\"#card-template\");\r\n  const cardElement = cardTemplate.content\r\n    .querySelector(\".places__item\")\r\n    .cloneNode(true);\r\n  const cardImage = cardElement.querySelector(\".card__image\");\r\n  const cardTitle = cardElement.querySelector(\".card__title\");\r\n  const cardLikeButton = cardElement.querySelector(\".card__like-button\");\r\n  const cardLikeCounter = cardElement.querySelector(\".card__like-counter\");\r\n  // Заполняем атрибуты картинки и текста данными\r\n  cardImage.src = cards.link;\r\n  cardImage.alt = cards.name;\r\n  cardTitle.textContent = cards.name;\r\n  cardLikeCounter.textContent = cards.likes.length;\r\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\r\n  // Слушатель удаления карточки если пользователь является владельцем\r\n  if (userId !== cards.owner._id) {\r\n    deleteButton.style.display = \"none\";\r\n    } else {\r\n    deleteButton.addEventListener(\"click\", () => {\r\n      const cardId = cards._id;\r\n      deleteCardCallback(cardElement , cardId);\r\n    });\r\n  }\r\n  // Проверка наличия лайка пользователя в массиве likes\r\n  const isLiked = cards.likes.some((like) => like._id === userId);\r\n  if (isLiked) {\r\n    cardLikeButton.classList.add(\"card__like-button_is-active\");\r\n  }\r\n  // Слушатель лайка\r\n  cardLikeButton.addEventListener(\"click\", () => {\r\n    countLikesCallback(cardLikeCounter, cardLikeButton, cards);\r\n  });\r\n\r\n  // Слушатель добавления картинки\r\n  cardImage.addEventListener(\"click\", () => {\r\n    openImageCallback(cardImage, popupImage, popupImageCaption, buttonTypeCard);\r\n  });\r\n\r\n  // Возвращаем созданный темплейт\r\n  return cardElement;\r\n}","// Валидация\r\nexport const validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".button\",\r\n  inactiveButtonClass: \"button_inactive\",\r\n  inputErrorClass: \"form__input_type_error\",\r\n  errorClass: \"form__input-error_active\",\r\n};\r\n\r\n// Добавление ерора\r\nconst showInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = inputElement.validationMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n// Удаление ерора\r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  if (errorElement) {\r\n    inputElement.classList.remove(validationConfig.inputErrorClass);\r\n    errorElement.classList.remove(validationConfig.errorClass);\r\n    errorElement.textContent = \"\";\r\n  }\r\n};\r\n\r\n// Проверка на валидность\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n};\r\n\r\n// Проверить, есть ли хотя бы один инпут непрошедший валидацию\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n// Переключить состояние кнопки\r\nconst toggleButtonState = (\r\n  inputList,\r\n  validationConfig,\r\n  buttonElementReturn\r\n) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElementReturn.setAttribute(\"disabled\", true);\r\n    buttonElementReturn.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElementReturn.removeAttribute(\"disabled\", false);\r\n    buttonElementReturn.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n};\r\n\r\n// Включение валидации\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(\r\n    validationConfig.submitButtonSelector\r\n  );\r\n  toggleButtonState(inputList, validationConfig, buttonElement);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", function () {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      toggleButtonState(inputList, validationConfig, buttonElement);\r\n    });\r\n  });\r\n};\r\n\r\n// Циклическое добавление валидации ко всем формам попапов\r\nconst enableValidation = (validationConfig) => {\r\n  const formElementList = Array.from(\r\n    document.querySelectorAll(validationConfig.formSelector)\r\n  );\r\n\r\n  formElementList.forEach((formElement) => {\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n};\r\n\r\n// Очистка поля\r\nfunction clearValidation(formElement, validationConfig) {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n  const buttonElementReturn = formElement.querySelector(\r\n    validationConfig.submitButtonSelector\r\n  );\r\n\r\n  inputList.forEach((inputElement) =>\r\n    hideInputError(formElement, inputElement, validationConfig)\r\n  );\r\n  toggleButtonState(inputList, validationConfig, buttonElementReturn);\r\n}\r\n\r\nexport { enableValidation as validation, clearValidation };\r\n","const baseUrl = \"https://nomoreparties.co/v1/wff-cohort-7\";\r\nconst apiRoutes = {\r\n  user: \"users/me\",\r\n  cards: \"cards\",\r\n  likes: \"likes\",\r\n};\r\n\r\nconst headers = {\r\n  Authorization: \"32e48890-9f28-47a5-845e-3c6381af43ab\",\r\n  \"Content-Type\": \"application/json\",\r\n};\r\n\r\nconst checkData = (data) => {\r\n  if (data.ok) {\r\n    return data.json();\r\n  } else {\r\n    return Promise.reject(`Error: ${data.status}`);\r\n  }\r\n};\r\n\r\nfunction request(endpoint, options) {\r\n  return fetch(`${baseUrl}/${endpoint}`, options).then(checkData);\r\n}\r\n\r\nconst getCards = () => {\r\n  return request(apiRoutes.cards, {\r\n    method: \"GET\",\r\n    headers,\r\n  });\r\n};\r\n\r\nconst postCard = (name, link) => {\r\n  return request(apiRoutes.cards, {\r\n    method: \"POST\",\r\n    headers,\r\n    body: JSON.stringify({\r\n      name,\r\n      link,\r\n    }),\r\n  });\r\n};\r\n\r\nconst deleteCardApi = (id) => {\r\n  return request(`${apiRoutes.cards}/${id}`, {\r\n    method: \"DELETE\",\r\n    headers,\r\n  });\r\n};\r\n\r\nconst getUser = () => {\r\n  return request(apiRoutes.user, {\r\n    method: \"GET\",\r\n    headers,\r\n  });\r\n};\r\n\r\nconst patchUser = (name, about) => {\r\n  return request(apiRoutes.user, {\r\n    method: \"PATCH\",\r\n    headers,\r\n    body: JSON.stringify({\r\n      name,\r\n      about,\r\n    }),\r\n  });\r\n}\r\n\r\nconst addLikeCard = (id)  => {\r\n  return request(`${apiRoutes.cards}/${apiRoutes.likes}/${id}`, {\r\n    method: \"PUT\",\r\n    headers\r\n  });\r\n};\r\n\r\nconst deleteLikeCard = (id) => {\r\n  return request(`${apiRoutes.cards}/${apiRoutes.likes}/${id}`, {\r\n    method: \"DELETE\",\r\n    headers,\r\n  });\r\n};\r\n\r\nconst patchAvatar = (avatar) => {\r\n  return request(`${apiRoutes.user}/avatar`, {\r\n    method: \"PATCH\",\r\n    headers,\r\n    body: JSON.stringify({ avatar: avatar }),\r\n  });\r\n};\r\nexport {\r\n  getCards,\r\n  postCard,\r\n  deleteCardApi,\r\n  getUser,\r\n  patchUser,\r\n  addLikeCard,\r\n  deleteLikeCard,\r\n  patchAvatar\r\n}","import { deleteCardApi } from \"../../components/api.js\";\r\nimport { closePopup, openPopup } from \"../modal.js\";\r\nimport { deletePopup } from \"../constat\";\r\n\r\nlet selectedCard;\r\nlet id;\r\nexport const openPopupDelete = (cardElement, cardId) => {\r\n  console.log(cardElement, cardId);\r\n  selectedCard = cardElement;\r\n  id = cardId;\r\n  console.log(selectedCard, id);\r\n  openPopup(deletePopup);\r\n};\r\n\r\nexport const closePopupDelete = () => {\r\n  closePopup(deletePopup);\r\n};\r\n\r\n// Функция удаления карточки\r\nexport function deleteCard( selectedCard, id) {\r\n  deleteCardApi(id)\r\n    .then(() => {\r\n      selectedCard.remove();\r\n      closePopupDelete();\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Произошла ошибка при удалении карточки:\", err);\r\n    });\r\n}\r\n\r\n// Форма удаления карточки\r\nexport function handleCardDelete(evt) {\r\n  evt.preventDefault();\r\n  deleteCard( selectedCard, id);\r\n}\r\n","import { patchUser } from \"../../components/api.js\";\r\nimport { closePopup } from \"../../components/modal.js\";\r\nimport {\r\n  buttonEditProfile,\r\n  nameInput,\r\n  jobInput,\r\n  editFormElement,\r\n  userJobElement,\r\n  userNameElement,\r\n} from \"../../components/constat.js\";\r\n\r\n//Поля формы\r\nexport function setInitialEditProfileFormValues(dataUser) {\r\n  if (dataUser) {\r\n    nameInput.value = userNameElement.textContent;\r\n    jobInput.value = userJobElement.textContent;\r\n  }\r\n}\r\n//форма редактирования профиля\r\nexport function handleFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  buttonEditProfile.textContent = \"Сохранение...\";\r\n  // отправка данных профиля\r\n  patchUser(nameInput.value, jobInput.value)\r\n    .then((dataUser) => {\r\n      console.log(dataUser);\r\n      setInitialEditProfileFormValues(dataUser);\r\n      closePopup(evt.target.closest(\".popup_is-opened\"));\r\n      editFormElement.reset();\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Произошла ошибка при редактировании профиля:\", err);\r\n    })\r\n    .finally(() => {\r\n      buttonEditProfile.textContent = \"Сохранить\";\r\n    });\r\n}\r\n","import \"./pages/index.css\";\nimport {\n  openPopup,\n  handleOverlayClick,\n  handleCloseButtonClick,\n} from \"./components/modal.js\";\n// import {initialCards} from './components/cards.js';\nimport { createCard } from \"./components/card.js\";\nimport {\n  popupsArray,\n  placesList,\n  editForm,\n  editFormElement,\n  buttonEditProfile,\n  profileEditButton,\n  userNameElement,\n  userJobElement,\n  popupImageCaption,\n  newPlaceFormElement,\n  newCardForm,\n  buttonNewCard,\n  buttonTypeCard,\n  profileAddButton,\n  nameInput,\n  jobInput,\n  avatarForm,\n  avatarFormElement,\n  buttonEditAvatar,\n  avatarImage,\n  deletePopup,\n  deleteCardForm,\n  closeButton,\n  buttonDeleteCard\n} from \"./components/constat.js\";\nimport { validation, clearValidation, validationConfig} from \"./components/validation.js\";\nimport {\n  getCards,\n  getUser,\n  addLikeCard,\n  deleteLikeCard,\n} from \"./components/api.js\";\nimport { openPopupDelete, closePopupDelete, handleCardDelete } from \"./components/forms/deleteForm.js\";\nimport { handleAvatarFormSubmit } from \"./components/forms/avatarForm.js\";\nimport { handleNewCardFormSubmit } from \"./components/forms/newCardsForm.js\";\nimport { handleFormSubmit, setInitialEditProfileFormValues} from \"./components/forms/editForm.js\";\n\nexport let userId = \"\";\n// Объект с колбэками\nexport const callbacksObject = {\n  deleteCardCallback: openPopupDelete,\n  openImageCallback: openImagePopup,\n  countLikesCallback: countLikes,\n};\n\nvalidation(validationConfig);\n\n// информация о пользователе\nfunction setUserInfo(dataUser) {\n  userNameElement.textContent = dataUser.name;\n  userJobElement.textContent = dataUser.about;\n  avatarImage.setAttribute(\n    \"style\",\n    `background-image: url('${dataUser.avatar}')`\n  );\n  userId = dataUser._id;\n}\n\n// Функция с циклом выведения карточек на страницу\nfunction renderCards(cards, callbacksObject, userId) {\n  placesList.innerHTML = \"\";\n  for (let i = 0; i < cards.length; i++) {\n    const cardElement = createCard(cards[i], callbacksObject, userId);\n    placesList.appendChild(cardElement);\n  }\n}\n\n// открыть попап с данными профиля\nprofileEditButton.addEventListener(\"click\", () => {\n  clearValidation(editFormElement, validationConfig);\n  setInitialEditProfileFormValues();\n  openPopup(editForm);\n});\n\n// открыть попап с картинкой\nexport function openImagePopup(\n  cardImg,\n  popupImage,\n  popupImageCaption,\n  buttonTypeCard\n) {\n  popupImage.src = cardImg.src;\n  popupImage.alt = cardImg.alt;\n  popupImageCaption.textContent = cardImg.alt;\n  clearValidation(newPlaceFormElement, validationConfig);\n  openPopup(buttonTypeCard);\n}\n\n// открыть попап с формой добавления карточки\nprofileAddButton.addEventListener(\"click\", () => {\n  clearValidation(newCardForm, validationConfig);\n  openPopup(newCardForm);\n});\n\n// открыть попап с формой добавления аватара\navatarImage.addEventListener(\"click\", () => {\n  clearValidation(avatarForm, validationConfig);\n  openPopup(avatarForm);\n});\n\n// слушатели обработчиков закрытия по оверлей и кнопке закрытия\npopupsArray.forEach((popup) => {\n  const closeButton = popup.querySelector(\".popup__close\");\n  popup.addEventListener(\"click\", handleOverlayClick);\n  closeButton.addEventListener(\"click\", handleCloseButtonClick);\n});\n\n// Функция подсчета лайков\n function countLikes(cardLikeCounter, cardLikeButton, cards) {\n  if (cardLikeButton.classList.contains(\"card__like-button_is-active\")) {\n    // Пользователю уже понравилась карточка, поэтому выполните операцию \"не нравится\".\n    deleteLikeCard(cards._id)\n    .then((res) => {\n      cardLikeButton.classList.toggle(\"card__like-button_is-active\");\n      cardLikeCounter.textContent = res.likes.length;\n    })\n    .catch((err) => {\n      console.error(\"Произошла ошибка при удалении лайка:\", err);\n    });\n  } else {\n    // понравилась карта, поэтому выполните аналогичную операцию\n    addLikeCard(cards._id)\n    .then((res) => {\n      cardLikeButton.classList.toggle(\"card__like-button_is-active\");\n      cardLikeCounter.textContent = res.likes.length;\n    })\n    .catch((err) => {\n      console.error(\"Произошла ошибка при добавлении лайка:\", err);\n    });\n  }\n}\n\n// Слушатели форм\neditForm.addEventListener(\"submit\", (evt) => handleFormSubmit(evt));\nnewCardForm.addEventListener(\"submit\", (evt) => handleNewCardFormSubmit(evt));\navatarForm.addEventListener(\"submit\", (evt) => handleAvatarFormSubmit(evt));\ncloseButton.addEventListener('click', closePopupDelete);\ndeleteCardForm.addEventListener('submit', (evt) => handleCardDelete(evt));\n\n// Промис получения информации о пользователе и карточках\nPromise.all([getUser(), getCards()])\n    .then(([user, cards]) => {\n        setUserInfo(user);\n        renderCards(cards, callbacksObject, user._id);\n    })\n    .catch((err) => {\n        console.log(\"Произошла ошибка при получении данных:\", err);\n    });\n","import { postCard } from \"../../components/api.js\";\r\nimport { createCard } from \"../../components/card.js\";\r\nimport { closePopup } from \"../../components/modal.js\";\r\nimport {\r\n  newCardForm,\r\n  newPlaceFormElement,\r\n  newPlaceNameInput,\r\n  newLinkInput,\r\n  buttonNewCard,\r\n  placesList,\r\n} from \"../../components/constat.js\";\r\nimport { userId, callbacksObject } from \"../../index.js\";\r\n// Форма добавления карточки\r\nexport function handleNewCardFormSubmit(event) {\r\n  event.preventDefault();\r\n  buttonNewCard.textContent = \"Сохранение...\";\r\n  // создание новой карточки\r\n  postCard(newPlaceNameInput.value, newLinkInput.value)\r\n    .then((card) => {\r\n      const createNewCard = createCard(card, callbacksObject, userId);\r\n      placesList.prepend(createNewCard);\r\n      newPlaceFormElement.reset();\r\n      closePopup(newCardForm);\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Произошла ошибка при добавлении карточки:\", err);\r\n    })\r\n    .finally(() => {\r\n      buttonNewCard.textContent = \"Сохранить\";\r\n    });\r\n}\r\n","import {\r\n  avatarFormElement,\r\n  buttonEditAvatar,\r\n  avatarImage,\r\n} from \"../constat.js\";\r\nimport { patchAvatar } from \"../api.js\";\r\nimport { closePopup } from \"../modal.js\";\r\n// форма добавления аватара\r\nexport function handleAvatarFormSubmit(event) {\r\n  event.preventDefault();\r\n  buttonEditAvatar.textContent = \"Сохранение...\";\r\n  const avatar = avatarFormElement.elements[\"avatar-link\"].value;\r\n  patchAvatar(avatar)\r\n    .then((avatar) => {\r\n      console.log(avatar);\r\n      avatarImage.setAttribute(\"style\", `background-image: url('${avatar}')`);\r\n      closePopup(avatarFormElement);\r\n      avatarFormElement.reset();\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Произошла ошибка при обновлении аватара:\", err);\r\n    })\r\n    .finally(() => {\r\n      buttonEditAvatar.textContent = \"Сохранить\";\r\n    });\r\n}\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","document","querySelector","editFormElement","forms","newPlaceFormElement","avatarFormElement","deleteCardForm","buttonEditProfile","buttonNewCard","buttonEditAvatar","buttonTypeCard","profileEditButton","profileAddButton","popupsArray","Array","from","querySelectorAll","editForm","newCardForm","avatarForm","deletePopup","placesList","avatarImage","nameInput","jobInput","userNameElement","userJobElement","newPlaceNameInput","elements","newLinkInput","link","popupImageCaption","popupImage","closeButton","handleEscClick","evt","openedPopup","find","popup","classList","contains","closePopup","handleOverlayClick","target","currentTarget","handleCloseButtonClick","closest","openPopup","add","addEventListener","remove","removeEventListener","createCard","cards","callbacksObject","userId","deleteCardCallback","openImageCallback","countLikesCallback","cardElement","content","cloneNode","cardImage","cardTitle","cardLikeButton","cardLikeCounter","src","alt","name","textContent","likes","length","deleteButton","owner","_id","style","display","cardId","some","like","validationConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","hideInputError","formElement","inputElement","errorElement","concat","id","toggleButtonState","inputList","buttonElementReturn","validity","valid","hasInvalidInput","removeAttribute","setAttribute","clearValidation","forEach","apiRoutes","headers","Authorization","checkData","data","ok","json","Promise","reject","status","request","endpoint","options","fetch","then","selectedCard","closePopupDelete","handleCardDelete","preventDefault","method","deleteCardApi","catch","err","console","error","deleteCard","setInitialEditProfileFormValues","dataUser","value","log","cardImg","deleteLikeCard","res","toggle","addLikeCard","buttonElement","validationMessage","showInputError","checkInputValidity","setEventListeners","validation","about","body","JSON","stringify","reset","finally","handleFormSubmit","card","createNewCard","prepend","avatar","all","_ref","_ref2","user","innerHTML","i","appendChild","renderCards"],"sourceRoot":""}